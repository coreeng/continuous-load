{{- if eq .Release.Namespace "continuous-load-source" -}}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  creationTimestamp: null
  labels:
    prometheus: {{ template "podinfo.fullname" . }}
    role: alert-rules
  name: prometheus-{{ template "podinfo.fullname" . }}-rules
spec:
  groups:
  - name: ./{{ template "podinfo.fullname" . }}.rules
    rules: 
    ## Latency rules
    - alert: Continuous_Load_Source_p99TooHigh
      expr: sum by(namespace, pod, path)
            (rate(http_request_duration_seconds_bucket{path=~"(forward_ingress|forward_service)", pod=~"source.*", le="0,025"}[1m])) / 
            sum by(namespace, pod, path) 
            (rate(http_request_duration_seconds_count{path=~"(forward_ingress|forward_service)", pod=~"source.*"}[1m])) < 0.99 
      for: 1m
      labels:
        role: source
        severity: minor
      annotations:
        description: |-
          Namespace: `{{`{{`}} $labels.namespace {{`}}`}}`
          Pod: `{{`{{`}} $labels.pod {{`}}`}}`
          Path: `{{`{{`}} $labels.path {{`}}`}}`
          Percentage of requests served is under 25ms: {{`{{`}} $value | humanize {{`}}`}}
        summary: The percentage of requests served within the p99 latency threshold is less than 99%.
    ## Traffic rules
    - alert: Continuous_Load_Source_NftTrafficTooLow
      expr: sum by(namespace) (rate(http_requests_total{ pod=~"source.*"}[1m])) < 10
      for: 3m
      labels:
        role: source
        severity: minor
      annotations:
        description: |-
          Namespace: `{{`{{`}} $labels.namespace {{`}}`}}`
          TPS: `{{`{{`}} $value | printf "%.0f" {{`}}`}}`
          Expected >= 10 for 3m
        summary: Traffic is too low in the NFT test so it might not be running correctly.
    - alert: Continuous_Load_Source_NftTrafficTooHigh
      expr: sum by(namespace) (rate(http_requests_total{ pod=~"source.*"}[1m])) > 100
      for: 3m
      labels:
        role: source
        severity: minor
      annotations:
        description: |-
          Namespace: `{{`{{`}} $labels.namespace {{`}}`}}`
          TPS: `{{`{{`}} $value | printf "%.0f" {{`}}`}}`
          Expected < 100 for 3m
        summary: Traffic is too high in the NFT test so it might not be running correctly.
    ## Error rules
    - alert: Continuous_Load_Source_AppError
      expr: sum by(namespace, pod, status) (rate(http_requests_total{ status!="200", pod=~"source.*", namespace="continuous-load-source"}[1m])) > 0.01
      labels:
        role: source
        severity: minor
      annotations:
        description: |-
          Namespace: `{{`{{`}} $labels.namespace {{`}}`}}`
          Pod: `{{`{{`}} $labels.pod {{`}}`}}`
          StatusCode: `{{`{{`}} $labels.status {{`}}`}}`
          Errors: `{{`{{`}} $value {{`}}`}}`
          Expected: 0
        summary: Errors have been reported.
    ## Saturation rules
    - alert: Continuous_Load_Source_CpuTooHigh
      expr: sum by(namespace, pod, container) (rate(container_cpu_usage_seconds_total{container!="istio-proxy", namespace="continuous-load-source", pod=~"source.*"}[1m])) -
            sum by(namespace, pod, container) (kube_pod_container_resource_requests{container!="istio-proxy", namespace="continuous-load-source", pod=~"source.*", resource="cpu", unit="core"}) > 0
      labels:
        role: source
        severity: minor
      annotations:
        description: |-
          Namespace: `{{`{{`}} $labels.namespace {{`}}`}}`
          Pod: `{{`{{`}} $labels.pod {{`}}`}}`
          Container: `{{`{{`}} $labels.container {{`}}`}}`
          Container is using more CPU than requested, cpu burst is: `{{`{{`}} $value {{`}}`}}` cpu core
          Please investigate
        summary: The container is using more cpu than expected.
    - alert: Continuous_Load_Source_MemoryTooHigh
      expr: (sum by(namespace, pod, container) (container_memory_rss{ container!="istio-proxy", namespace="continuous-load-source", pod=~"source.*"}) /
            sum by(namespace, pod, container) (kube_pod_container_resource_requests{container!="istio-proxy", namespace="continuous-load-source", pod=~"source.*", resource="memory", unit="byte"})) * 100 > 90
      labels:
        role: source
        severity: minor
      annotations:
        description: |-
          Namespace: `{{`{{`}} $labels.namespace {{`}}`}}`
          Pod: `{{`{{`}} $labels.pod {{`}}`}}`
          Container: `{{`{{`}} $labels.container {{`}}`}}`
          Memory usage percentage: `{{`{{`}} $value | humanize {{`}}`}}`
          Expected <= 90% for 1m
        summary: The container is using more memory than expected.
{{- end }}
      